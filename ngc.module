<?php
/**
 * @file
 * Nederlandse Go Competitie module
 */

/**
 * Implementatie van hook_help()
 *
 * Toon help en module info
 *
 * @param path
 *   Welk pad binnen de site gebruikt wordt
 * @param arg
 *   Array met huidig pad, teruggegeven door arg() functie
 */
function ngc_help($path, $arg) {
  switch ($path) {
  case "admin/help#ngc":
    return '<p>' . t("Maak indelingen en uitslagen voor NGC") . '</p>';
    break;
  }
}

/**
 * Implementatie van hook_block_info()
 *
 */
function ngc_block_info() {
  $blocks['ngc'] = array(
    // Name in block list.
    'info' => t('Nederlandse Go Competitie'),
    // Default setting for cache.
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}

/**
 * Content function
 * 
 * Set beginning and end dates, retrieve posts from database
 * saved in that time period.
 *
 * @return
 *  A result set of the targeted posts.
 */
function ngc_contents() {
  // Get date
  $today = getdate();
  // Calculate date 1 week ago
  $start_time = mktime(0, 0, 0, $today['mon'],($today['mday'] - 7), $today['year']);
  // Get all posts from one week ago to the present
  $end_time = time();
  // Get Configuration data
  $max_num = variable_get('ngc_max', 3);
  // Use Database API to retrieve current posts.
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title', 'created'))
    ->condition('status', 1)   // Published
    ->condition('created', array($start_time, $end_time), 'BETWEEN')
    ->orderBy('created', 'DESC')  // Most recent posts first
    ->range(0, $max_num)  // Max. # of items
    ->execute();
  return $query;
}

function ngc_block_view($delta = '') {
  switch ($delta) {
    case 'ngc':
      $block['subject'] = t('NGC Rooster');
      if (user_access('access content')) {
        $result = ngc_contents();
        // Array to contain items for the block to render
        $items = array();
        // Iterate over the result set and format as links
        foreach ($result as $node) {
          $items[] = array(
            'data' => l($node->title, 'node/' . $node->nid),
          );
        }  // foreach
        if (empty($items)) {
          $block['content'] = t('NGC rooster leeg');
        }
        else {
          // Pass data through theme function
          $block['content'] = theme('item_list', array(
            'items' => $items));
        }
      
      } // if (access)
    return $block;
  } // switch (delta)
} // function ngc_block_view()

/**
 * Page callback: NGC settings
 *
 * @cf ngc_menu()
 */
function ngc_form($form, $form_state) {
  $form['ngc_max'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of teams'),
    '#default_value' => variable_get('ngc_max', 3),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t('Maximum number of teams to allow in competition'),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}

/**
 * Implement hook_menu()
 */
function ngc_menu() {
  $items = array();
  $items['admin/config/content/ngc'] = array(
    'title' => 'Nederlandse Go Competitie',
    'description' => 'Configuratiescherm NGC',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ngc_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

